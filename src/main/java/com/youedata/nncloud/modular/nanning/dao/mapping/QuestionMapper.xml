<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youedata.nncloud.modular.nanning.dao.QuestionMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.youedata.nncloud.modular.nanning.model.Question">
        <id column="question_id" property="questionId" />
        <result column="question_pid" property="questionPid" />
        <result column="question_code" property="questionCode" />
        <result column="question_user_id" property="questionUserId" />
        <result column="question_user_name" property="questionUserName" />
        <result column="question_office_id" property="questionOfficeId" />
        <result column="question_office_name" property="questionOfficeName" />
        <result column="question_title" property="questionTitle" />
        <result column="question_content" property="questionContent" />
        <result column="question_type" property="questionType" />
        <result column="question_privilege" property="questionPrivilege" />
        <result column="question_status" property="questionStatus" />
        <result column="question_collet" property="questionCollet" />
        <result column="question_progress" property="questionProgress" />
        <result column="question_create_by" property="questionCreateBy" />
        <result column="question_update_by" property="questionUpdateBy" />
        <result column="question_update_time" property="questionUpdateTime" />
        <result column="question_create_time" property="questionCreateTime" />
        <result column="question_error_msg" property="questionErrorMsg" />
        <result column="question_view" property="questionView" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        question_id AS questionId, question_pid AS questionPid, question_code AS questionCode,
        question_user_id AS questionUserId, question_user_name AS questionUserName, question_office_id AS questionOfficeId,
        question_office_name AS questionOfficeName, question_title AS questionTitle,
        question_content AS questionContent, question_type AS questionType,
        question_privilege AS questionPrivilege, question_status AS questionStatus,question_collet AS questionCollet,
        question_progress AS questionProgress, question_create_by AS questionCreateBy,
        question_update_by AS questionUpdateBy,
        question_update_time AS questionUpdateTime,
        question_create_time AS questionCreateTime,
        question_error_msg AS questionErrorMsg
    </sql>

    <sql id="BaseSql">
        question_id,question_pid,question_code,question_user_id,
        question_user_name,question_office_id,question_office_name,
        question_title,question_content,question_type,question_privilege,
        question_status,question_progress,question_error_msg,question_create_by,
        question_update_by,
        question_update_time question_update_time,
        question_create_time  question_create_time
    </sql>


    <!-- 添加留言 -->
    <insert id="addQuestionBoard" parameterType="com.youedata.nncloud.modular.nanning.model.Question" keyProperty="questionId" useGeneratedKeys="true">
        insert into question(question_pid,question_user_id,question_user_name,question_content)
        values(#{questionId}, #{questionUserId}, #{questionUserName}, #{questionContent})
    </insert>

    <!--企业端 - 反馈问题列表-->
    <select id="getListByUserId" resultType="com.youedata.nncloud.modular.nanning.model.Question" parameterType="Integer">
        select
        question_id AS questionId, question_title AS questionTitle, question_type AS questionType, question_progress AS questionProgress
        from question where question_user_id = #{userId} order by question_create_time
        <choose>
            <when test="orderByField != null and orderByField !=''">
                <choose>
                    <when test="isAsc == true">
                        order by ${orderByField} ASC
                    </when>
                    <otherwise>
                        order by ${orderByField} DESC
                    </otherwise>
                </choose>
            </when>
        </choose>
    </select>

    <!--政府端 - 反馈问题列表-->
    <select id="getListByProgress" resultType="com.youedata.nncloud.modular.nanning.model.Question" parameterType="String">
        select
        question_id AS questionId, question_title AS questionTitle, question_type AS questionType, question_progress AS questionProgress
        from question where question_progress in
        <foreach collection="progressList" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        order by question_create_time
        <choose>
            <when test="orderByField != null and orderByField !=''">
                <choose>
                    <when test="isAsc == true">
                        order by ${orderByField} ASC
                    </when>
                    <otherwise>
                        order by ${orderByField} DESC
                    </otherwise>
                </choose>
            </when>
        </choose>
    </select>



    <!--问题详情查询-->
    <select id="getChildByPid" resultType="com.youedata.nncloud.modular.nanning.model.Question">
        select
        question_id AS questionId, question_pid AS questionPid,
        question_user_id AS questionUserId, question_user_name AS questionUserName,
        question_office_id AS questionOfficeId, question_office_name AS questionOfficeName,
        question_title AS questionTitle, question_content AS questionContent,
        question_progress AS questionProgress, question_create_by AS questionCreateBy,
        question_create_time AS questionCreateTime, question_error_msg AS questionErrorMsg
        from question where question_pid = #{questionPid} order by question_create_time asc
    </select>
    <select id="getById" resultType="com.youedata.nncloud.modular.nanning.model.Question">
        select
        a.question_id AS questionId, a.question_pid AS questionPid,
        a.question_user_id AS questionUserId, a.question_user_name AS questionUserName,
        a.question_office_id AS questionOfficeId, a.question_office_name AS questionOfficeName,
        a.question_title AS questionTitle, a.question_content AS questionContent,
        a.question_progress AS questionProgress, a.question_create_by AS questionCreateBy,
        a.question_create_time AS questionCreateTime, a.question_error_msg AS questionErrorMsg,
        (case  when b.collet_id is null then 0 else 1 end) AS questionCollet
        from question a left join collet b ON a.question_id = b.collet_question_id
        where a.question_id =  #{questionId}
    </select>


    <!-- 查询问题的进度 -->
    <select id="selectQuestionProgress" parameterType="int" resultType="String">
        select question_progress AS questionProgress from question where question_id = #{questionId} and question_pid = 0
    </select>

    <!--当月问题件数-->
    <select id="getMonthCount" resultType="Integer" parameterType="String">
        select count(*) from question where date_format(question_create_time,'%Y-%m') = #{date}
    </select>

    <!--当月问题解决件数-->
    <select id="getMonthSolveCount" resultType="Integer" parameterType="String">
        select count(*) from question where date_format(question_create_time,'%Y-%m') = #{date} and question_progress in ('6','7','8','9')
    </select>
    <!--问题解决平均天数-->
    <select id="getSolveDayAvg" resultType="Double" parameterType="String">
        select ROUND(T1.allday/T2.cou,1)
        from
        (select sum(TIMESTAMPDIFF(DAY,question_create_time,question_update_time)) as allday from question where date_format(question_create_time,'%Y-%m')=date_format(now(),'%Y-%m') and question_progress in ('6','7','8','9')) T1,
        (select count(*) as cou  from question where date_format(question_create_time,'%Y-%m') = #{date} and question_progress in ('6','7','8','9')) T2
    </select>
    <!--答复排名前五委办局-->
    <select id="getOfficeSort" resultType="com.youedata.nncloud.modular.nanning.model.vo.QuestionVo" parameterType="String">
       select question_office_id AS officeId,question_office_name AS officeName,count(*) AS questionCount
       from question
       where
       date_format(question_create_time,'%Y-%m') = #{date}
       GROUP BY officeId
       ORDER BY questionCount
       desc limit 0 ,5
    </select>



</mapper>
